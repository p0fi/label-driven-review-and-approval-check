{"version":3,"file":"index.js","sourceRoot":"","sources":["../src/index.ts"],"names":[],"mappings":"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","sourcesContent":["import * as core from \"@actions/core\";\nimport * as github from \"@actions/github\";\nimport { parse as parseYAML } from \"yaml\";\n\n// Ambient fallback declarations (non-invasive). These suppress \"Cannot find module\" errors\n// when node modules have not yet been installed locally. Once dependencies are installed\n// (npm install), TypeScript will use the real type definitions instead.\ndeclare module \"@actions/core\" {\n  export function getInput(\n    name: string,\n    options?: { required?: boolean },\n  ): string;\n  export function setFailed(message: string | Error): void;\n  export function info(message: string): void;\n  export function warning(message: string): void;\n  export function setOutput(name: string, value: string): void;\n}\n// (Removed ambient @actions/github module augmentation to avoid redeclaration conflicts)\n\n/**\n * Configuration schema loaded from YAML.\n */\ninterface LabelConfig {\n  labels: Record<string, string>; // label -> team slug (without org)\n  requiredApprovals?: number;\n  overrides?: Record<string, { requiredApprovals?: number }>;\n  ignoreDraft?: boolean;\n  retractOnUnlabeled?: boolean;\n  // Future optional fields referenced in comments (unused here):\n  // failOnUnresolvableTeam?: boolean;\n}\n\ninterface EvaluatedDomain {\n  domainKey: string; // canonical domain key from config (case-sensitive as in config)\n  teamSlug: string; // team slug\n  labelName: string; // actual label on PR (with prefix if any)\n  approvals: number; // count of valid approvals\n  required: number; // required approvals\n  satisfied: boolean; // approvals >= required\n  approvers: string[]; // user logins that counted\n}\n\ntype SummaryMode = \"minimal\" | \"standard\" | \"verbose\";\n\ninterface Inputs {\n  token: string;\n  configPath: string;\n  failOnMissingConfig: boolean;\n  dryRun: boolean;\n  debug: boolean;\n  summaryMode: SummaryMode;\n}\n\nconst CHECK_NAME = \"label-driven-review-and-approval-check\";\n\nfunction getBooleanInput(name: string, defaultValue: boolean): boolean {\n  const raw = core.getInput(name) || \"\";\n  if (!raw) return defaultValue;\n  return [\"1\", \"true\", \"yes\", \"on\"].includes(raw.trim().toLowerCase());\n}\n\nfunction getSummaryMode(): SummaryMode {\n  const raw = core.getInput(\"summary-mode\").trim().toLowerCase();\n  if (raw === \"minimal\" || raw === \"verbose\" || raw === \"standard\") return raw;\n  return \"standard\";\n}\n\nfunction readInputs(): Inputs {\n  return {\n    token:\n      core.getInput(\"token\", { required: false }) ||\n      process.env.GITHUB_TOKEN ||\n      \"\",\n    configPath: core.getInput(\"config-path\") || \".github/label-teams.yml\",\n    failOnMissingConfig: getBooleanInput(\"fail-on-missing-config\", true),\n    dryRun: getBooleanInput(\"dry-run\", false),\n    debug: getBooleanInput(\"debug\", false),\n    summaryMode: getSummaryMode(),\n  };\n}\n\nfunction debug(enabled: boolean, ...msg: unknown[]) {\n  if (enabled) {\n    core.info(\n      `[debug] ${msg.map((m) => (typeof m === \"string\" ? m : JSON.stringify(m))).join(\" \")}`,\n    );\n  }\n}\n\nasync function loadConfig(\n  octokit: ReturnType<typeof github.getOctokit>,\n  inputs: Inputs,\n): Promise<LabelConfig | null> {\n  const { owner, repo } = github.context.repo;\n  // We attempt to read from base ref of the PR (so configuration changes in the PR itself do not affect gating).\n  const pr = github.context.payload.pull_request;\n  let ref: string | undefined = pr?.base?.ref;\n  if (!ref) {\n    // Fallback to default branch (if event not a PR event).\n    try {\n      const repoResp = await octokit.rest.repos.get({ owner, repo });\n      ref = repoResp.data.default_branch;\n    } catch {\n      ref = \"main\";\n    }\n  }\n\n  try {\n    const res = await octokit.rest.repos.getContent({\n      owner,\n      repo,\n      path: inputs.configPath,\n      ref,\n    });\n\n    if (!Array.isArray(res.data) && \"content\" in res.data && res.data.content) {\n      const buff = Buffer.from(\n        res.data.content,\n        res.data.encoding as BufferEncoding,\n      );\n      const text = buff.toString(\"utf8\");\n      const parsed = parseYAML(text) as unknown;\n      const config = validateConfig(parsed);\n      return config;\n    }\n\n    core.warning(\n      `Configuration path \"${inputs.configPath}\" was a directory or unexpected format.`,\n    );\n    return null;\n  } catch (err: any) {\n    if (err.status === 404) {\n      const msg = `Configuration file not found at ${inputs.configPath} (ref: ${ref}).`;\n      if (inputs.failOnMissingConfig) {\n        throw new Error(msg);\n      }\n      core.warning(msg);\n      return null;\n    }\n    throw err;\n  }\n}\n\nfunction validateConfig(raw: unknown): LabelConfig {\n  if (typeof raw !== \"object\" || raw === null) {\n    throw new Error(\"Config root must be an object.\");\n  }\n  const obj = raw as Record<string, unknown>;\n  if (typeof obj.labels !== \"object\" || obj.labels === null) {\n    throw new Error(\n      'Config must contain a \"labels\" object mapping label names to team slugs.',\n    );\n  }\n  const labels: Record<string, string> = {};\n  for (const [k, v] of Object.entries(obj.labels)) {\n    if (typeof v !== \"string\" || !v.trim()) {\n      throw new Error(\n        `Domain \"${k}\" must map to a non-empty team slug string.`,\n      );\n    }\n    labels[k.trim()] = v.trim();\n  }\n  const cfg: LabelConfig = {\n    labels,\n    requiredApprovals:\n      typeof obj.requiredApprovals === \"number\" && obj.requiredApprovals >= 1\n        ? Math.floor(obj.requiredApprovals)\n        : 1,\n    overrides: {},\n    ignoreDraft:\n      obj.ignoreDraft !== undefined ? Boolean(obj.ignoreDraft) : true,\n    retractOnUnlabeled:\n      obj.retractOnUnlabeled !== undefined\n        ? Boolean(obj.retractOnUnlabeled)\n        : true,\n  };\n  if (typeof obj.overrides === \"object\" && obj.overrides !== null) {\n    for (const [k, spec] of Object.entries(obj.overrides)) {\n      if (spec && typeof spec === \"object\") {\n        const r = (spec as any).requiredApprovals;\n        if (r !== undefined) {\n          if (typeof r !== \"number\" || r < 1) {\n            throw new Error(\n              `Override for domain \"${k}\" has invalid requiredApprovals \"${r}\"`,\n            );\n          }\n          cfg.overrides![k] = { requiredApprovals: Math.floor(r) };\n        }\n      }\n    }\n  }\n  return cfg;\n}\n\n/**\n * Fetch all reviews for the PR, returning only the last state per user.\n */\nasync function getApprovalsByUser(\n  octokit: ReturnType<typeof github.getOctokit>,\n  pull_number: number,\n) {\n  const { owner, repo } = github.context.repo;\n  const allReviews = await octokit.paginate(octokit.rest.pulls.listReviews, {\n    owner,\n    repo,\n    pull_number,\n    per_page: 100,\n  });\n\n  // Map login -> last review state (by submitted_at order)\n  const byUser = new Map<string, { state: string; submitted_at?: string }>();\n  for (const r of allReviews) {\n    const login = r.user?.login;\n    if (!login) continue;\n    const current = byUser.get(login);\n    if (!current) {\n      byUser.set(login, {\n        state: r.state || \"\",\n        submitted_at: r.submitted_at || r.submitted_at || undefined,\n      });\n    } else {\n      // Compare timestamps for last review\n      const prev = current.submitted_at\n        ? new Date(current.submitted_at).getTime()\n        : 0;\n      const curr = r.submitted_at ? new Date(r.submitted_at).getTime() : 0;\n      if (curr >= prev) {\n        byUser.set(login, {\n          state: r.state || \"\",\n          submitted_at: r.submitted_at || undefined,\n        });\n      }\n    }\n  }\n\n  const approvedUsers = new Set<string>();\n  for (const [user, info] of byUser.entries()) {\n    if (info.state === \"APPROVED\") {\n      approvedUsers.add(user);\n    }\n  }\n\n  return {\n    approvedUsers,\n    allReviewStates: byUser,\n  };\n}\n\ninterface TeamMembersCache {\n  [teamSlug: string]: Set<string>;\n}\n\nasync function fetchTeamMembers(\n  octokit: ReturnType<typeof github.getOctokit>,\n  org: string,\n  teamSlug: string,\n  cache: TeamMembersCache,\n  debugEnabled: boolean,\n): Promise<Set<string>> {\n  if (cache[teamSlug]) return cache[teamSlug];\n  try {\n    const members = (await octokit.paginate(\n      octokit.rest.teams.listMembersInOrg,\n      {\n        org,\n        team_slug: teamSlug,\n        per_page: 100,\n      },\n    )) as Array<{ login: string | null | undefined }>;\n    const set = new Set<string>(\n      members\n        .map((m) => m.login)\n        .filter((l): l is string => typeof l === \"string\" && l.length > 0),\n    );\n    cache[teamSlug] = set;\n    debug(debugEnabled, `Fetched ${set.size} members for team ${teamSlug}`);\n    return set;\n  } catch (err: any) {\n    // If we cannot resolve team members, create empty set (treat as 0 approvals).\n    core.warning(\n      `Could not list members for team \"${teamSlug}\": ${err.message || err}`,\n    );\n    cache[teamSlug] = new Set<string>();\n    return cache[teamSlug];\n  }\n}\n\ninterface DomainExtractionResult {\n  domains: string[]; // config domain keys (case-sensitive)\n  domainLabelMap: Map<string, string>; // domainKey -> actual label name on PR\n}\n\n/**\n * Extract domain labels present on the PR, given config & PR labels.\n */\n\nfunction extractDomainLabels(\n  config: LabelConfig,\n  prLabels: ReadonlyArray<{ name?: string | null }>,\n): DomainExtractionResult {\n  // Exact, case-sensitive match only – label text must exactly equal the configured label key.\n  const domainLabelMap = new Map<string, string>();\n  for (const l of prLabels) {\n    const name: string | undefined = l?.name ?? undefined;\n    if (typeof name !== \"string\" || name.length === 0) continue;\n    if (Object.prototype.hasOwnProperty.call(config.labels, name)) {\n      domainLabelMap.set(name, name);\n    }\n  }\n  return {\n    domains: Array.from(domainLabelMap.keys()),\n    domainLabelMap,\n  };\n}\n\n/**\n * Request team reviewers for missing domain teams.\n */\nasync function ensureTeamReviewRequests(\n  octokit: ReturnType<typeof github.getOctokit>,\n  pull_number: number,\n  org: string,\n  config: LabelConfig,\n  presentDomains: string[],\n  existingRequestedTeamSlugs: Set<string>,\n  inputs: Inputs,\n) {\n  // For each present domain, ensure team requested\n  const toRequest: string[] = [];\n  for (const d of presentDomains) {\n    const teamSlug = config.labels[d];\n    if (!teamSlug) continue;\n    if (existingRequestedTeamSlugs.has(teamSlug)) continue;\n    toRequest.push(teamSlug);\n  }\n  if (toRequest.length === 0) return;\n\n  if (inputs.dryRun) {\n    core.info(\n      `[dry-run] Would request review from teams: ${toRequest.join(\", \")}`,\n    );\n    return;\n  }\n\n  try {\n    await octokit.rest.pulls.requestReviewers({\n      owner: org,\n      repo: github.context.repo.repo,\n      pull_number,\n      // Provide explicit empty reviewers array (API allows either individual users or teams)\n      reviewers: [],\n      // Cast to any to satisfy potential stricter type expectations in certain @octokit versions\n      team_reviewers: toRequest as any,\n    } as any);\n    core.info(`Requested review from teams: ${toRequest.join(\", \")}`);\n  } catch (err: any) {\n    if (err.status === 422) {\n      core.warning(\n        `Some team review requests may already exist: ${err.message}`,\n      );\n      return;\n    }\n    throw err;\n  }\n}\n\n/**\n * If an unlabeled event occurred and the removed label is a domain label, optionally retract team request.\n */\nasync function maybeRetractOnUnlabeled(\n  octokit: ReturnType<typeof github.getOctokit>,\n  config: LabelConfig,\n  inputs: Inputs,\n  prNumber: number,\n  org: string,\n) {\n  if (!config.retractOnUnlabeled) return;\n  const payload = github.context.payload;\n  if (\n    github.context.eventName !== \"pull_request\" &&\n    github.context.eventName !== \"pull_request_target\"\n  )\n    return;\n  if (payload.action !== \"unlabeled\") return;\n  const removedLabelName: string | undefined = payload.label?.name;\n  if (!removedLabelName) return;\n\n  if (!(removedLabelName in config.labels)) return;\n  const teamSlug = config.labels[removedLabelName];\n  if (!teamSlug) return;\n\n  if (inputs.dryRun) {\n    core.info(\n      `[dry-run] Would remove requested reviewer team: ${teamSlug} due to label removal.`,\n    );\n    return;\n  }\n\n  try {\n    await octokit.rest.pulls.removeRequestedReviewers({\n      owner: org,\n      repo: github.context.repo.repo,\n      pull_number: prNumber,\n      reviewers: [], // explicit empty list to satisfy required field in types\n      team_reviewers: [teamSlug] as any,\n    } as any);\n    core.info(\n      `Removed requested reviewer team \"${teamSlug}\" after label \"${removedLabelName}\" was removed.`,\n    );\n  } catch (err: any) {\n    // If team not currently requested, ignore\n    core.warning(\n      `Failed to remove requested reviewer team \"${teamSlug}\": ${err.message || err}`,\n    );\n  }\n}\n\nasync function createCheckRun(\n  octokit: ReturnType<typeof github.getOctokit>,\n  headSha: string | undefined,\n  conclusion: \"success\" | \"failure\" | \"neutral\" | \"skipped\",\n  summary: string,\n  text: string,\n) {\n  if (!headSha) {\n    core.warning(\"headSha undefined; skipping check run creation.\");\n    return;\n  }\n  const { owner, repo } = github.context.repo;\n  try {\n    await octokit.rest.checks.create({\n      owner,\n      repo,\n      name: CHECK_NAME,\n      head_sha: headSha,\n      status: \"completed\",\n      conclusion,\n      output: {\n        title: CHECK_NAME,\n        summary,\n        text,\n      },\n    });\n  } catch (err: any) {\n    core.warning(`Unable to create check run: ${err.message || err}`);\n  }\n}\n\nfunction formatEvaluations(\n  domains: EvaluatedDomain[],\n  summaryMode: SummaryMode,\n) {\n  const lines: string[] = [];\n\n  const passing = domains.filter((d) => d.satisfied);\n  const failing = domains.filter((d) => !d.satisfied);\n\n  if (domains.length === 0) {\n    lines.push(\"No configured labels present.\");\n  } else {\n    lines.push(\"Label evaluation:\");\n    for (const d of domains) {\n      const statusEmoji = d.satisfied ? \"✅\" : \"❌\";\n      if (summaryMode === \"minimal\") {\n        lines.push(\n          `- ${statusEmoji} ${d.domainKey} (${d.approvals}/${d.required})`,\n        );\n      } else if (summaryMode === \"standard\") {\n        lines.push(\n          `- ${statusEmoji} ${d.domainKey} -> team ${d.teamSlug}: approvals ${d.approvals}/${d.required}${d.approvers.length ? ` (by ${d.approvers.join(\", \")})` : \"\"}`,\n        );\n      } else {\n        lines.push(`- ${statusEmoji} Label: ${d.domainKey}\n  Label: ${d.labelName}\n  Team: ${d.teamSlug}\n  Approvals: ${d.approvals}/${d.required}\n  Approvers: ${d.approvers.length ? d.approvers.join(\", \") : \"(none)\"}\n`);\n      }\n    }\n  }\n\n  lines.push(\"\");\n  lines.push(\n    `Passing labels: ${passing.length ? passing.map((p) => p.domainKey).join(\", \") : \"(none)\"}`,\n  );\n  lines.push(\n    `Failing labels: ${failing.length ? failing.map((f) => f.domainKey).join(\", \") : \"(none)\"}`,\n  );\n\n  return lines.join(\"\\n\");\n}\n\nasync function run(): Promise<void> {\n  const inputs = readInputs();\n  if (!inputs.token) {\n    core.setFailed(\n      \"No GitHub token provided (input token or GITHUB_TOKEN env).\",\n    );\n    return;\n  }\n\n  const octokit = github.getOctokit(inputs.token);\n  const payload = github.context.payload;\n  const pr = payload.pull_request;\n\n  if (!pr) {\n    core.info(\n      \"This action is intended for pull_request / pull_request_target events. Exiting gracefully.\",\n    );\n    core.setOutput(\"status\", \"skipped\");\n    return;\n  }\n\n  const org = github.context.repo.owner;\n  const pull_number = pr.number;\n  const headSha = pr.head?.sha;\n  if (!headSha) {\n    core.setFailed(\"Could not determine head SHA for PR.\");\n    return;\n  }\n\n  let config: LabelConfig | null = null;\n  try {\n    config = await loadConfig(octokit, inputs);\n  } catch (err: any) {\n    core.setFailed(`Failed to load config: ${err.message || err}`);\n    return;\n  }\n\n  if (!config) {\n    core.info(\"No configuration available; skipping evaluation.\");\n    core.setOutput(\"status\", \"skipped\");\n    await createCheckRun(\n      octokit,\n      headSha,\n      \"skipped\",\n      \"No config\",\n      \"Configuration file missing or not loaded.\",\n    );\n    return;\n  }\n\n  // Maybe retract pending team review request if label removed.\n  await maybeRetractOnUnlabeled(octokit, config, inputs, pull_number, org);\n\n  if (config.ignoreDraft && pr.draft) {\n    const msg = \"PR is draft; domain approvals check skipped.\";\n    core.info(msg);\n    await createCheckRun(octokit, headSha, \"skipped\", \"Draft PR\", msg);\n    core.setOutput(\"status\", \"skipped\");\n    return;\n  }\n\n  // Extract domain labels\n  const prLabels: ReadonlyArray<{ name?: string | null }> = Array.isArray(\n    pr.labels,\n  )\n    ? (pr.labels as ReadonlyArray<{ name?: string | null }>)\n    : [];\n  const extraction = extractDomainLabels(config, prLabels);\n\n  // Gather existing requested teams to avoid duplicate requests\n  let refreshedPR: any = pr as any;\n  try {\n    // Always refetch to capture requested teams state\n    const fresh = await octokit.rest.pulls.get({\n      owner: org,\n      repo: github.context.repo.repo,\n      pull_number,\n    });\n    refreshedPR = fresh.data;\n  } catch (err: any) {\n    core.warning(`Could not refresh PR: ${err.message || err}`);\n  }\n\n  const existingRequestedTeamSlugs: Set<string> = new Set<string>(\n    (Array.isArray(refreshedPR.requested_teams)\n      ? refreshedPR.requested_teams\n      : []\n    )\n      .map((t: { slug?: string | null }) => t?.slug)\n      .filter(\n        (slug: unknown): slug is string =>\n          typeof slug === \"string\" && (slug as string).length > 0,\n      ),\n  );\n\n  // Request missing teams (side-effect)\n  try {\n    await ensureTeamReviewRequests(\n      octokit,\n      pull_number,\n      org,\n      config,\n      extraction.domains,\n      existingRequestedTeamSlugs,\n      inputs,\n    );\n  } catch (err: any) {\n    core.warning(`Failed ensuring team review requests: ${err.message || err}`);\n  }\n\n  // If no domain labels present and no unknown: pass trivially (or maybe success)\n  if (extraction.domains.length === 0) {\n    const msg = \"No configured labels present; no approval requirements.\";\n    core.info(msg);\n    await createCheckRun(octokit, headSha, \"success\", \"No labels\", msg);\n    core.setOutput(\"status\", \"success\");\n    core.setOutput(\"required_labels\", \"\");\n    core.setOutput(\"missing_approvals\", \"\");\n    return;\n  }\n\n  // Collect approvals\n  const { approvedUsers } = await getApprovalsByUser(octokit, pull_number);\n\n  // For each domain label, compute approvals from that team\n  const teamMembersCache: TeamMembersCache = {};\n  const evaluations: EvaluatedDomain[] = [];\n\n  for (const domainKey of extraction.domains) {\n    const teamSlug = config.labels[domainKey];\n    if (!teamSlug) {\n      core.warning(\n        `Label \"${domainKey}\" has no mapped team slug in configuration; skipping.`,\n      );\n      continue;\n    }\n    const overrideRequired = config.overrides?.[domainKey]?.requiredApprovals;\n    const required = overrideRequired ?? config.requiredApprovals ?? 1;\n\n    // Resolve the exact label name from the extraction map; if missing, skip safely\n    const resolvedLabelName = extraction.domainLabelMap.get(domainKey);\n    if (!resolvedLabelName) {\n      core.warning(\n        `Configured label key \"${domainKey}\" was not found among current PR labels; skipping its approval evaluation.`,\n      );\n      continue;\n    }\n\n    const members = await fetchTeamMembers(\n      octokit,\n      org,\n      teamSlug,\n      teamMembersCache,\n      inputs.debug,\n    );\n    const approvers: string[] = [];\n    for (const user of approvedUsers) {\n      if (members.has(user)) {\n        approvers.push(user);\n      }\n    }\n    const approvals = approvers.length;\n    evaluations.push({\n      domainKey,\n      teamSlug,\n      labelName: resolvedLabelName,\n      approvals,\n      required,\n      satisfied: approvals >= required,\n      approvers,\n    });\n  }\n\n  const missing = evaluations\n    .filter((e) => !e.satisfied)\n    .map((e) => e.domainKey);\n  const anyFailure = missing.length > 0;\n\n  const summary = anyFailure\n    ? \"label-driven-review-and-approval-check: missing required team approvals.\"\n    : \"label-driven-review-and-approval-check: all required team approvals satisfied.\";\n  const body = formatEvaluations(evaluations, inputs.summaryMode);\n\n  // Create check run\n  await createCheckRun(\n    octokit,\n    headSha,\n    anyFailure ? \"failure\" : \"success\",\n    summary,\n    body,\n  );\n\n  // Outputs\n  core.setOutput(\"status\", anyFailure ? \"failure\" : \"success\");\n  core.setOutput(\n    \"required_labels\",\n    evaluations.map((e) => e.domainKey).join(\",\"),\n  );\n  core.setOutput(\"missing_approvals\", missing.join(\",\"));\n\n  if (anyFailure) {\n    core.setFailed(summary);\n  } else {\n    core.info(summary);\n  }\n}\n\nrun().catch((err) => {\n  core.setFailed(\n    err instanceof Error ? err.message : `Unhandled error: ${String(err)}`,\n  );\n});\n"]}